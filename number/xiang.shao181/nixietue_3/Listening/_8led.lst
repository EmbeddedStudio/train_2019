C51 COMPILER V9.56.0.0   _8LED                                                             09/15/2019 18:11:05 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE _8LED
OBJECT MODULE PLACED IN ..\Output\_8led.obj
COMPILER INVOKED BY: D:\A-work\Program_Files\C51\BIN\C51.EXE ..\User\_8led.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\User) DE
                    -BUG OBJECTEXTEND PRINT(..\Listening\_8led.lst) TABS(2) OBJECT(..\Output\_8led.obj)

line level    source

   1          #include "reg51.h"
   2          typedef unsigned char u8;
   3          typedef unsigned int u16;
   4          
   5          char SegCode[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}; //0,1,2,3,4,5,6,7,8,9
   6          
   7            
   8          void Timer0Init ()
   9          {
  10   1        TMOD |= 0x01;  //这个货用来保证前面的数不受后面数的影响，虽然我不知道为什么
  11   1        TH0 = 0xfc;    //th0是前八位，tl0是后八位
  12   1        TL0 = 0x18;    //初值的计算
  13   1        ET0 = 1;       //打开t0定时器
  14   1        EA = 1;        //中断的总开关但是好像不怎么需要写
  15   1        TR0 = 1;       //前面GATE的值是0；所以人为控制
  16   1      }
  17          
  18          int main()
  19          {
  20   1        Timer0Init();
  21   1        while(1);
  22   1      }
  23          
  24          void Time0() interrupt 1
  25          {
  26   1        static u16 i=0;
  27   1        static u16 j;
  28   1        TH0 = 0xfc;      //利用方式一每次都会重置所以每次都要重新复制
  29   1        TL0 = 0x18;      //这里用的初值是一次一微秒，所以想实现一秒要运行一千次
  30   1        j=(i/1000);
  31   1        if((i%1000==0)&&(i<10000))
  32   1        {
  33   2          P1 = ~0x01;
  34   2          P0 = SegCode[j];
  35   2        }
  36   1        /*else if(i=10000)
  37   1        {
  38   1          i=0;
  39   1          P1 = ~0x01;
  40   1          P0 = SegCode[1];
  41   1          delay(500);
  42   1          P1 = ~0x02;
  43   1          P0 = SegCode[0];
  44   1        }*/
  45   1        i++;
  46   1      }
  47              


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    123    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   _8LED                                                             09/15/2019 18:11:05 PAGE 2   

   DATA SIZE        =     14    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
