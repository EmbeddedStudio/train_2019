C51 COMPILER V9.56.0.0   0                                                                 10/20/2019 10:08:29 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE 0
OBJECT MODULE PLACED IN .\Objects\0.obj
COMPILER INVOKED BY: D:\kijy\keil51\C51\BIN\C51.EXE 0.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\0.l
                    -st) TABS(2) OBJECT(.\Objects\0.obj)

line level    source

   1          #include "reg51.h" 
   2          typedef unsigned char u8;
   3          u8 DigCode[6]={0xFE,0xFD,0xFB,0xF7,0xEF,0xDF};
   4          u8 SegCode[10]={0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
   5          u8 value[6]={1, 2, 3, 4, 5, 6};
   6          u8 location=0;
   7          u8 flickerFlag=0;
   8          u8 dispalyCount=0;
   9          u8 second=0;
  10          u8 minute=0;
  11          u8 hour=0;
  12          u8 InterruptCount=0;
  13          u8 Li1=0;
  14          u8 Li2=0;
  15          int i,j;
  16          
  17          void delay(int z)
  18          {
  19   1        int i;
  20   1        for(i=100;i>=0;i--)
  21   1        for(;z>=0;z--);
  22   1      }
  23          int Key_Scan(void);
  24          void Key_Control(int keyValue);
  25          void shijian(void);
  26          void jinzhi(void);
  27          void jian();
  28          void jia();
  29          void changliang()
  30          {  
  31   1             for(i = 0; i < 6; i++)   
  32   1             {    
  33   2               P1 = DigCode[i];
  34   2               if(i == 1 || i == 3) 
  35   2         { 
  36   3          P0 = SegCode[value[i]] | 0x80;    
  37   3         }   
  38   2         else  
  39   2           {    
  40   3             P0 = SegCode[value[i]];
  41   3           }
  42   2           delay(1);
  43   2         }
  44   1         }
  45          void shanshuo()
  46          {
  47   1        for(j = 20; j > 0; j--)
  48   1        {
  49   2         for(i = 0; i < 6; i++)   
  50   2             {    
  51   3               P1 = DigCode[i];
  52   3               if(i == 1 || i == 3) 
  53   3         { 
  54   4          P0 = SegCode[value[i]] | 0x80;    
C51 COMPILER V9.56.0.0   0                                                                 10/20/2019 10:08:29 PAGE 2   

  55   4         }   
  56   3         else  
  57   3           {    
  58   4             P0 = SegCode[value[i]];
  59   4           }
  60   3           delay(1);
  61   3         }
  62   2       }
  63   1      for(j = 20; j > 0; j--) 
  64   1         {  
  65   2           for(i = 0; i < 6; i++)  
  66   2           {
  67   3             if(location == i)   
  68   3               { 
  69   4                 P1 = 0xff;    
  70   4               }    
  71   3               else  
  72   3                 {
  73   4                   P1 = DigCode[i];  
  74   4                 }
  75   3                 if(i == 1 || i == 3)   
  76   3                   {    
  77   4                     P0 = SegCode[value[i]] | 0x80; 
  78   4         }    
  79   3      else   
  80   3       {     
  81   4       P0 = SegCode[value[i]];   
  82   4       }    
  83   3       delay(1);
  84   3      }
  85   2           }
  86   1      
  87   1      }
  88          void main()
  89          {
  90   1      TMOD= 0x01;
  91   1      
  92   1        TH0=0x0b;
  93   1        TL0=0xdc;
  94   1            IE=0x83;
  95   1            IT0=1;
  96   1        TR0=1;
  97   1      
  98   1        while(1)
  99   1        {
 100   2        
 101   2           jian();
 102   2           jia();
 103   2           shijian();
 104   2           jinzhi();
 105   2          if(flickerFlag==0)
 106   2            changliang();
 107   2          else
 108   2            shanshuo();
 109   2           
 110   2         }
 111   1        }
 112          int Key_Scan(void)
 113          {
 114   1      int keyValue=0xff;
 115   1      int i = 0;
 116   1        if(P2!=0xff)
C51 COMPILER V9.56.0.0   0                                                                 10/20/2019 10:08:29 PAGE 3   

 117   1        {
 118   2        delay(1);
 119   2        if(P2 != 0xff)
 120   2        {
 121   3        keyValue = P2;
 122   3         while((i < 20) && (P2 != 0xff))                
 123   3               {                    
 124   4               delay(1);       
 125   4               i++;              
 126   4               }  
 127   3        }   
 128   2        }
 129   1        return keyValue;
 130   1      }
 131          void Key_Control(int keyValue)
 132          {
 133   1      switch(keyValue)
 134   1      {
 135   2        case(0xfe):
 136   2        if(flickerFlag!=0)
 137   2        {
 138   3        Li1=~Li1;
 139   3        } 
 140   2        break;
 141   2        case(0xfd):
 142   2          if(flickerFlag!=0)
 143   2          {
 144   3          Li2=~Li2;
 145   3          }
 146   2          break;
 147   2          case(0xfb):
 148   2            if(flickerFlag!=0)
 149   2            {
 150   3            if(location!=5)
 151   3            {
 152   4            location++;
 153   4            }
 154   3          }
 155   2            break;
 156   2            case(0xf7):
 157   2            if(flickerFlag!=0)
 158   2            {
 159   3              if(location!=0)
 160   3              {
 161   4              location--;
 162   4              }
 163   3            }
 164   2              break;
 165   2              case(0xef):
 166   2                flickerFlag=~flickerFlag;
 167   2              break;
 168   2      
 169   2      }
 170   1      }
 171          void shijian(void)
 172          {
 173   1      value[0]=hour/10;
 174   1      value[1]=hour%10;
 175   1        value[2]=minute/10;
 176   1        value[3]=minute%10;
 177   1        value[4]=second/10;
 178   1        value[5]=second%10;
C51 COMPILER V9.56.0.0   0                                                                 10/20/2019 10:08:29 PAGE 4   

 179   1      }
 180          void jinzhi(void)
 181          {
 182   1      if(second==60)
 183   1      {
 184   2      second=0;
 185   2        minute++;
 186   2      }
 187   1        if(minute==60)
 188   1      {
 189   2      minute=0;
 190   2        hour++;
 191   2      }
 192   1        if(hour==24)
 193   1      {
 194   2      hour=0;
 195   2      }
 196   1      }
 197          void TIM0_Handler() interrupt 1
 198          {
 199   1      
 200   1       TR0 = 0; 
 201   1         TH0 = 0x0b; 
 202   1         TL0 = 0xdc;
 203   1         TR0 = 1;
 204   1        InterruptCount++;
 205   1         if(InterruptCount >= 16)
 206   1         {
 207   2           InterruptCount = 0;
 208   2            second++;
 209   2      
 210   2       }
 211   1      }
 212          void jian()
 213          {
 214   1      if(Li1!=0)
 215   1        {
 216   2          switch(location)
 217   2          {
 218   3            case(0):
 219   3            {
 220   4              if(hour>=10)
 221   4              hour=hour-10;
 222   4             else 
 223   4              hour=hour+20;
 224   4              }
 225   3            break;
 226   3            case(1):
 227   3            {
 228   4              if(0<hour&&hour<10)
 229   4                hour--;
 230   4              else
 231   4                hour=9;
 232   4            }
 233   3            break;
 234   3            case(2):
 235   3            {
 236   4              if(minute>=10)
 237   4            minute=minute-10;
 238   4            else
 239   4              minute=minute+50;}
 240   3            break;
C51 COMPILER V9.56.0.0   0                                                                 10/20/2019 10:08:29 PAGE 5   

 241   3            case(3):
 242   3            {
 243   4            if(0<minute&&minute<10)
 244   4              minute=minute-1;
 245   4            else
 246   4              minute=9;
 247   4          }
 248   3            break;
 249   3            case(4):
 250   3            {if(second>=10)
 251   4            second=second-10;
 252   4            else
 253   4              second=second+50;
 254   4            }
 255   3            break;
 256   3            case(5):
 257   3            {
 258   4              if(0<second&&second<10)
 259   4              second=second-1;
 260   4              else
 261   4                second=9;
 262   4            }
 263   3            break;
 264   3          }
 265   2        }
 266   1          Li1=0;
 267   1        }
 268          void jia()
 269          {
 270   1      if(Li2!=0)
 271   1        {
 272   2          switch(location)
 273   2          {
 274   3            case(0):
 275   3            {
 276   4              hour=hour+10;
 277   4            if(hour>=30)
 278   4              hour=hour-30;
 279   4            }
 280   3            break;
 281   3            case(1):
 282   3            {
 283   4              hour++;
 284   4            if(hour%10==0)
 285   4              hour=hour-10;
 286   4            }
 287   3            break;
 288   3            case(2):
 289   3            {
 290   4              minute=minute+10;
 291   4            if(minute>=60)
 292   4              minute=minute-60;
 293   4            }
 294   3            break;
 295   3            case(3):
 296   3            {
 297   4              minute++;
 298   4              if(minute%10==0)
 299   4              minute=minute-10;
 300   4            }
 301   3            break;
 302   3            case(4):
C51 COMPILER V9.56.0.0   0                                                                 10/20/2019 10:08:29 PAGE 6   

 303   3            {
 304   4              second=second+10;
 305   4            if(second>=60)
 306   4              second=second-60;
 307   4          }
 308   3            break;
 309   3            case(5):
 310   3            {
 311   4              second++;
 312   4              if(second%10==0)
 313   4              second=second-10;
 314   4            }
 315   3            break;
 316   3          }
 317   2        Li2=0;
 318   2        }
 319   1      }
 320          void  INT0_Handler()  interrupt 0 
 321          {
 322   1         Key_Control(Key_Scan());
 323   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    956    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     35    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
